name: cpp-cmake-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'c*'
      
jobs:
  build:
    name: Create Release
    runs-on: windows-2019
    env:
      libraryName: libtorch
      cmakeInstallationPath: libtorch-installation
      tagName: v1.13.1
      msvcTargetZip: libtorch-${{ github.ref_name }}-msvc2019.zip
    steps:
      - name: git clone libtorch
        shell: cmd
        run: git clone --recurse-submodule https://github.com/pytorch/pytorch.git && cd pytorch && git checkout ${{ env.tagName }}
        
      - name: curl cmake-3.22.2-windows-x86_64.zip
        shell: cmd
        run: |
          curl https://github.com/Kitware/CMake/releases/download/v3.22.2/cmake-3.22.2-windows-x86_64.zip -L --output cmake-3.22.2-windows-x86_64.zip &&^
          dir &&^
          7z.exe x cmake-3.22.2-windows-x86_64.zip
          
      - name: curl PortableGit-2.38.1-64-bit.7z.exe
        shell: cmd
        run: cd /d ${{ github.workspace }} && curl https://github.com/git-for-windows/git/releases/download/v2.38.1.windows.1/PortableGit-2.38.1-64-bit.7z.exe -L --output PortableGit-2.38.1-64-bit.7z.exe && dir && 7z.exe x PortableGit-2.38.1-64-bit.7z.exe -o"PortableGit-2.38.1-64-bit"

      - name: curl python
        shell: cmd
        run: |
          curl https://github.com/dirkarnez/python-portable/releases/download/v3.10.8/python-3.10.8-amd64-portable.zip -L --output python.zip &&^
          7z.exe x python.zip -o"python-3.10.8-amd64-portable"
        
      - name: set PATH, check mingw version, cmake generate, build and install
        shell: cmd
        run: |
          set CD_LINUX=%CD:\=/%
          cd pytorch && ^
          cmake.exe -G "Visual Studio 16 2019" -A x64 ^
          -DBUILD_SHARED_LIBS:BOOL=ON ^
          -DCMAKE_BUILD_TYPE:STRING=Release ^
          -DPYTHON_EXECUTABLE:PATH="%CD_LINUX%/python-3.10.8-amd64-portable" ^
          -DCMAKE_INSTALL_PREFIX="cmake-build/${{ env.cmakeInstallationPath }}" ^
          -B./cmake-build &&^
          cd cmake-build &&^
          cmake --build . --target install &&^
          cmake --install . 
            
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: "pytorch/cmake-build/${{ env.cmakeInstallationPath }}"
          filename: "${{ env.msvcTargetZip }}"

      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "pytorch/cmake-build/${{ env.cmakeInstallationPath }}/${{ env.msvcTargetZip }}"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
